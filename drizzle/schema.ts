import { pgTable, text, integer, varchar, timestamp, real } from "drizzle-orm/pg-core"
import { sql } from "drizzle-orm"



export const sqliteMaster = pgTable("sqlite_master", {
	type: text(),
	name: text(),
	tblName: text("tbl_name"),
	rootpage: integer(),
	sql: text(),
});

export const tblexecutivesummaries = pgTable("tblexecutivesummaries", {
	esSeqNum: integer("ESSeqNum"),
	facilityId: integer("FacilityID"),
	summaryText: text("SummaryText"),
});

export const tblexecutivesummariesChangehistory = pgTable("tblexecutivesummaries_changehistory", {
	esChangeHistoryId: integer("ESChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	summaryText: text("SummaryText"),
	oldSummaryText: text("OldSummaryText"),
	esSeqNum: integer("ESSeqNum"),
	facilityId: integer("FacilityID"),
});

export const tblrmperror = pgTable("tblrmperror", {
	facilityId: integer("FacilityID"),
	sequenceNumber: integer("SequenceNumber"),
	errorText: text("ErrorText"),
});

export const tblrmptrack = pgTable("tblrmptrack", {
	trackId: integer("TrackID"),
	epaFacilityId: varchar("EPAFacilityID", { length: 255 }),
	receiptDate: timestamp("ReceiptDate", { mode: 'string' }),
	postmarkDate: timestamp("PostmarkDate", { mode: 'string' }),
	facilityName1: varchar("FacilityName1", { length: 255 }),
	facilityName2: varchar("FacilityName2", { length: 255 }),
	facilityStreet1: varchar("FacilityStreet1", { length: 255 }),
	facilityStreet2: varchar("FacilityStreet2", { length: 255 }),
	facilityCity: varchar("FacilityCity", { length: 255 }),
	facilityState: varchar("FacilityState", { length: 255 }),
	facilityZip: varchar("FacilityZip", { length: 255 }),
	facilityZip4: varchar("FacilityZip4", { length: 255 }),
	documentHandle: varchar("DocumentHandle", { length: 255 }),
	comments: text("Comments"),
	documentType: varchar("DocumentType", { length: 255 }),
	rejectionReason: varchar("RejectionReason", { length: 255 }),
	resolutionDate: timestamp("ResolutionDate", { mode: 'string' }),
	insertDate: timestamp("InsertDate", { mode: 'string' }),
});

export const tbls1Facilities = pgTable("tbls1facilities", {
	facilityId: integer("FacilityID"),
	facilityName: text("FacilityName"),
	facilityStr1: text("FacilityStr1"),
	facilityStr2: text("FacilityStr2"),
	facilityCity: text("FacilityCity"),
	facilityState: text("FacilityState"),
	facilityZipCode: text("FacilityZipCode"),
	facility4DigitZipExt: text("Facility4DigitZipExt"),
	facilityCountyFips: text("FacilityCountyFIPS"),
	lepc: text("LEPC"),
	facilityLatDecDegs: text("FacilityLatDecDegs"),
	facilityLongDecDegs: text("FacilityLongDecDegs"),
	validLatLongFlag: text("ValidLatLongFlag"),
	latLongMethod: text("LatLongMethod"),
	latLongDescription: text("LatLongDescription"),
	facilityUrl: text("FacilityURL"),
	facilityPhoneNumber: text("FacilityPhoneNumber"),
	facilityEmailAddress: text("FacilityEmailAddress"),
	facilityDuns: integer("FacilityDUNS"),
	parentCompanyName: text("ParentCompanyName"),
	company2Name: text("Company2Name"),
	companyDuns: integer("CompanyDUNS"),
	company2Duns: integer("Company2DUNS"),
	operatorName: text("OperatorName"),
	operatorPhone: text("OperatorPhone"),
	operatorStr1: text("OperatorStr1"),
	operatorStr2: text("OperatorStr2"),
	operatorCity: text("OperatorCity"),
	operatorStateFips: text("OperatorStateFIPS"),
	operatorZipCode: text("OperatorZipCode"),
	operatorZipCodeExt: text("OperatorZipCodeExt"),
	rmpContact: text("RMPContact"),
	rmpTitle: text("RMPTitle"),
	emergencyContactName: text("EmergencyContactName"),
	emergencyContactTitle: text("EmergencyContactTitle"),
	emergencyContactPhone: text("EmergencyContactPhone"),
	phone24: text("Phone24"),
	emergencyContactExtPin: text("EmergencyContactExt_PIN"),
	fte: integer("FTE"),
	otherEpaFacilityId: text("OtherEPAFacilityID"),
	epaFacilityId: text("EPAFacilityID"),
	oshaPsm: text("OSHA_PSM"),
	epcra302: text("EPCRA_302"),
	caaTitleV: text("CAA_TitleV"),
	clearAirOpPermitId: text("ClearAirOpPermitID"),
	safetyInspectionDate: text("SafetyInspectionDate"),
	safetyInspectionBy: text("SafetyInspectionBy"),
	oshaRanking: text("OSHARanking"),
	predictiveFilingFlag: text("PredictiveFilingFlag"),
	submissionType: text("SubmissionType"),
	rmpDescription: text("RMPDescription"),
	noAccidents: text("NoAccidents"),
	foreignStateProv: text("ForeignStateProv"),
	foreignZipCode: text("ForeignZipCode"),
	foreignCountry: text("ForeignCountry"),
	cbiFlag: text("CBI_Flag"),
	completionCheckDate: text("CompletionCheckDate"),
	errorReportDate: text("ErrorReportDate"),
	receiptDate: text("ReceiptDate"),
	graphicsIndicator: text("GraphicsIndicator"),
	attachmentsIndicator: text("AttachmentsIndicator"),
	certificationReceivedFlag: text("CertificationReceivedFlag"),
	submissionMethod: text("SubmissionMethod"),
	cbiSubstantiationFlag: text("CBISubstantiationFlag"),
	electronicWaiverReceivedFlag: text("ElectronicWaiverReceivedFlag"),
	postmarkDate: text("PostmarkDate"),
	rmpCompleteFlag: text("RMPCompleteFlag"),
	deRegistrationDate: text("DeRegistrationDate"),
	deRegistrationEffectiveDate: text("DeRegistrationEffectiveDate"),
	anniversaryDate: text("AnniversaryDate"),
	cbiUnsanitizedVersionFlag: text("CBIUnsanitizedVersionFlag"),
	versionNumber: text("VersionNumber"),
	frsLat: real("FRS_Lat"),
	frsLong: real("FRS_Long"),
	frsDescription: text("FRS_Description"),
	frsMethod: text("FRS_Method"),
	horizontalAccMeasure: text("HorizontalAccMeasure"),
	horizontalRefDatumCode: text("HorizontalRefDatumCode"),
	sourceMapScaleNumber: text("SourceMapScaleNumber"),
	emergencyContactEmail: text("EmergencyContactEmail"),
	rmpPreparerName: text("RMPPreparerName"),
	rmpPreparerStreet1: text("RMPPreparerStreet1"),
	rmpPreparerStreet2: text("RMPPreparerStreet2"),
	rmpPreparerCity: text("RMPPreparerCity"),
	rmpPreparerState: text("RMPPreparerState"),
	rmpPreparerZip: text("RMPPreparerZIP"),
	rmpPreparerZip4Ext: text("RMPPreparerZIP4Ext"),
	rmpPreparerTelephone: text("RMPPreparerTelephone"),
	rmpPreparerForeignStateOrProvince: text("RMPPreparerForeignStateOrProvince"),
	rmpPreparerForeignCountry: text("RMPPreparerForeignCountry"),
	rmpPreparerForeignPostalCode: text("RMPPreparerForeignPostalCode"),
	rmpSubmissionReasonCode: text("RMPSubmissionReasonCode"),
	rmpEmail: text("RMPEmail"),
	deregistrationReasonCode: text("DeregistrationReasonCode"),
	deregistrationReasonOtherText: text("DeregistrationReasonOtherText"),
});

export const tbls1FacilitiesChangehistory = pgTable("tbls1facilities_changehistory", {
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionDate: text("CDXCorrectionDate"),
	cdxUserId: text("CDXUserID"),
	cdxReasonCode: text("CDXReasonCode"),
	cdxTransactionCode: text("CDXTransactionCode"),
	cdxAuthorizationName: text("CDXAuthorizationName"),
	cdxCorrectionSectionName: text("CDXCorrectionSectionName"),
	rcChangeDate: text("RCChangeDate"),
	rcComment: text("RCComment"),
	rcTransactionId: integer("RCTransactionID"),
	facilityId: integer("FacilityID"),
	facilityName: text("FacilityName"),
	oldFacilityName: text("OldFacilityName"),
	facilityStr1: text("FacilityStr1"),
	oldFacilityStr1: text("OldFacilityStr1"),
	facilityStr2: text("FacilityStr2"),
	oldFacilityStr2: text("OldFacilityStr2"),
	facilityCity: text("FacilityCity"),
	oldFacilityCity: text("OldFacilityCity"),
	facilityState: text("FacilityState"),
	oldFacilityState: text("OldFacilityState"),
	facilityZipCode: text("FacilityZipCode"),
	oldFacilityZipCode: text("OldFacilityZipCode"),
	facility4DigitZipExt: text("Facility4DigitZipExt"),
	oldFacility4DigitZipExt: text("OldFacility4DigitZipExt"),
	facilityCountyFips: text("FacilityCountyFIPS"),
	oldFacilityCountyFips: text("OldFacilityCountyFIPS"),
	lepc: text("LEPC"),
	oldLepc: text("OldLEPC"),
	facilityLatDecDegs: text("FacilityLatDecDegs"),
	oldFacilityLatDecDegs: text("OldFacilityLatDecDegs"),
	facilityLongDecDegs: text("FacilityLongDecDegs"),
	oldFacilityLongDecDegs: text("OldFacilityLongDecDegs"),
	latLongMethod: text("LatLongMethod"),
	oldLatLongMethod: text("OldLatLongMethod"),
	latLongDescription: text("LatLongDescription"),
	oldLatLongDescription: text("OldLatLongDescription"),
	facilityUrl: text("FacilityURL"),
	oldFacilityUrl: text("OldFacilityURL"),
	facilityPhoneNumber: text("FacilityPhoneNumber"),
	oldFacilityPhoneNumber: text("OldFacilityPhoneNumber"),
	facilityEmailAddress: text("FacilityEmailAddress"),
	oldFacilityEmailAddress: text("OldFacilityEmailAddress"),
	facilityDuns: integer("FacilityDUNS"),
	oldFacilityDuns: integer("OldFacilityDUNS"),
	parentCompanyName: text("ParentCompanyName"),
	oldParentCompanyName: text("OldParentCompanyName"),
	company2Name: text("Company2Name"),
	oldCompany2Name: text("OldCompany2Name"),
	companyDuns: integer("CompanyDUNS"),
	oldCompanyDuns: integer("OldCompanyDUNS"),
	company2Duns: integer("Company2DUNS"),
	oldCompany2Duns: integer("OldCompany2DUNS"),
	operatorName: text("OperatorName"),
	oldOperatorName: text("OldOperatorName"),
	operatorPhone: text("OperatorPhone"),
	oldOperatorPhone: text("OldOperatorPhone"),
	operatorStr1: text("OperatorStr1"),
	oldOperatorStr1: text("OldOperatorStr1"),
	operatorStr2: text("OperatorStr2"),
	oldOperatorStr2: text("OldOperatorStr2"),
	operatorCity: text("OperatorCity"),
	oldOperatorCity: text("OldOperatorCity"),
	operatorState: text("OperatorState"),
	oldOperatorState: text("OldOperatorState"),
	operatorZipCode: text("OperatorZipCode"),
	oldOperatorZipCode: text("OldOperatorZipCode"),
	operatorZipCodeExt: text("OperatorZipCodeExt"),
	oldOperatorZipCodeExt: text("OldOperatorZipCodeExt"),
	rmpContact: text("RMPContact"),
	oldRmpContact: text("OldRMPContact"),
	rmpTitle: text("RMPTitle"),
	oldRmpTitle: text("OldRMPTitle"),
	emergencyContactName: text("EmergencyContactName"),
	oldEmergencyContactName: text("OldEmergencyContactName"),
	emergencyContactTitle: text("EmergencyContactTitle"),
	oldEmergencyContactTitle: text("OldEmergencyContactTitle"),
	emergencyContactPhone: text("EmergencyContactPhone"),
	oldEmergencyContactPhone: text("OldEmergencyContactPhone"),
	phone24: text("Phone24"),
	oldPhone24: text("OldPhone24"),
	emergencyContactExtPin: text("EmergencyContactExt_PIN"),
	oldEmergencyContactExtPin: text("OldEmergencyContactExt_PIN"),
	fte: integer("FTE"),
	oldFte: integer("OldFTE"),
	otherEpaFacilityId: text("OtherEPAFacilityID"),
	oldOtherEpaFacilityId: text("OldOtherEPAFacilityID"),
	epaFacilityId: text("EPAFacilityID"),
	oldEpaFacilityId: text("OldEPAFacilityID"),
	oshaPsm: text("OSHA_PSM"),
	oldOshaPsm: text("OldOSHA_PSM"),
	epcra302: text("EPCRA_302"),
	oldEpcra302: text("OldEPCRA_302"),
	caaTitleV: text("CAA_TitleV"),
	oldCaaTitleV: text("OldCAA_TitleV"),
	clearAirOpPermitId: text("ClearAirOpPermitID"),
	oldClearAirOpPermitId: text("OldClearAirOpPermitID"),
	safetyInspectionDate: text("SafetyInspectionDate"),
	oldSafetyInspectionDate: text("OldSafetyInspectionDate"),
	safetyInspectionBy: text("SafetyInspectionBy"),
	oldSafetyInspectionBy: text("OldSafetyInspectionBy"),
	oshaRanking: text("OSHARanking"),
	oldOshaRanking: text("OldOSHARanking"),
	submissionType: text("SubmissionType"),
	oldSubmissionType: text("OldSubmissionType"),
	noAccidents: text("NoAccidents"),
	oldNoAccidents: text("OldNoAccidents"),
	foreignStateProv: text("ForeignStateProv"),
	oldForeignStateProv: text("OldForeignStateProv"),
	foreignZipCode: text("ForeignZipCode"),
	oldForeignZipCode: text("OldForeignZipCode"),
	foreignCountry: text("ForeignCountry"),
	oldForeignCountry: text("OldForeignCountry"),
	completionCheckDate: text("CompletionCheckDate"),
	oldCompletionCheckDate: text("OldCompletionCheckDate"),
	errorReportDate: text("ErrorReportDate"),
	oldErrorReportDate: text("OldErrorReportDate"),
	receiptDate: text("ReceiptDate"),
	oldReceiptDate: text("OldReceiptDate"),
	postmarkDate: text("PostmarkDate"),
	oldPostmarkDate: text("OldPostmarkDate"),
	rmpCompleteFlag: text("RMPCompleteFlag"),
	oldRmpCompleteFlag: text("OldRMPCompleteFlag"),
	deRegistrationDate: text("DeRegistrationDate"),
	oldDeRegistrationDate: text("OldDeRegistrationDate"),
	deRegistrationEffectiveDate: text("DeRegistrationEffectiveDate"),
	oldDeRegistrationEffectiveDate: text("OldDeRegistrationEffectiveDate"),
	anniversaryDate: text("AnniversaryDate"),
	oldAnniversaryDate: text("OldAnniversaryDate"),
	horizontalAccMeasure: text("HorizontalAccMeasure"),
	oldHorizontalAccMeasure: text("OldHorizontalAccMeasure"),
	horizontalRefDatumCode: text("HorizontalRefDatumCode"),
	oldHorizontalRefDatumCode: text("OldHorizontalRefDatumCode"),
	sourceMapScaleNumber: text("SourceMapScaleNumber"),
	oldSourceMapScaleNumber: text("OldSourceMapScaleNumber"),
	emergencyContactEmail: text("EmergencyContactEmail"),
	oldEmergencyContactEmail: text("OldEmergencyContactEmail"),
	rmpPreparerName: text("RMPPreparerName"),
	oldRmpPreparerName: text("OldRMPPreparerName"),
	rmpPreparerStreet1: text("RMPPreparerStreet1"),
	oldRmpPreparerStreet1: text("OldRMPPreparerStreet1"),
	rmpPreparerStreet2: text("RMPPreparerStreet2"),
	oldRmpPreparerStreet2: text("OldRMPPreparerStreet2"),
	rmpPreparerCity: text("RMPPreparerCity"),
	oldRmpPreparerCity: text("OldRMPPreparerCity"),
	rmpPreparerState: text("RMPPreparerState"),
	oldRmpPreparerState: text("OldRMPPreparerState"),
	rmpPreparerZip: text("RMPPreparerZIP"),
	oldRmpPreparerZip: text("OldRMPPreparerZIP"),
	rmpPreparerZip4Ext: text("RMPPreparerZIP4Ext"),
	oldRmpPreparerZip4Ext: text("OldRMPPreparerZIP4Ext"),
	rmpPreparerTelephone: text("RMPPreparerTelephone"),
	oldRmpPreparerTelephone: text("OldRMPPreparerTelephone"),
	rmpPreparerForeignStateOrProvince: text("RMPPreparerForeignStateOrProvince"),
	oldRmpPreparerForeignStateOrProvince: text("OldRMPPreparerForeignStateOrProvince"),
	rmpPreparerForeignCountry: text("RMPPreparerForeignCountry"),
	oldRmpPreparerForeignCountry: text("OldRMPPreparerForeignCountry"),
	rmpPreparerForeignPostalCode: text("RMPPreparerForeignPostalCode"),
	oldRmpPreparerForeignPostalCode: text("OldRMPPreparerForeignPostalCode"),
	rmpSubmissionReasonCode: text("RMPSubmissionReasonCode"),
	oldRmpSubmissionReasonCode: text("OldRMPSubmissionReasonCode"),
	rmpEmail: text("RMPEmail"),
	oldRmpEmail: text("OldRMPEmail"),
	deregistrationReasonCode: text("DeregistrationReasonCode"),
	oldDeregistrationReasonCode: text("OldDeregistrationReasonCode"),
	deregistrationReasonOtherText: text("DeregistrationReasonOtherText"),
	oldDeregistrationReasonOtherText: text("OldDeregistrationReasonOtherText"),
});

export const tbls1Flammablemixturechemicals = pgTable("tbls1flammablemixturechemicals", {
	flamMixChemId: integer("FlamMixChemID"),
	processChemicalId: integer("ProcessChemicalID"),
	chemicalId: integer("ChemicalID"),
});

export const tbls1Processchemicals = pgTable("tbls1processchemicals", {
	processChemicalId: integer("ProcessChemicalID"),
	processId: integer("ProcessID"),
	chemicalId: integer("ChemicalID"),
	quantity: real("Quantity"),
	cbiFlag: text("CBI_Flag"),
});

export const tbls1ProcesschemicalsChangehistory = pgTable("tbls1processchemicals_changehistory", {
	processChemicalIdChangeHistoryId: integer("ProcessChemicalIDChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	processChemicalId: integer("ProcessChemicalID"),
	processId: integer("ProcessID"),
	chemicalId: integer("ChemicalID"),
	quantity: real("Quantity"),
	oldQuantity: real("OldQuantity"),
});

export const tbls1ProcessNaics = pgTable("tbls1process_naics", {
	processNaicsId: integer("Process_NAICS_ID"),
	processId: integer("ProcessID"),
	naicsCode: varchar("NAICSCode", { length: 255 }),
});

export const tbls1ProcessNaicsChangehistory = pgTable("tbls1process_naics_changehistory", {
	processNaicsIdChangeHistoryId: integer("Process_NAICS_IDChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	processNaicsId: integer("Process_NAICS_ID"),
	processId: integer("ProcessID"),
	naicsCode: varchar("NAICSCode", { length: 255 }),
});

export const tbls1Processes = pgTable("tbls1processes", {
	processId: integer("ProcessID"),
	altId: text("AltID"),
	facilityId: integer("FacilityID"),
	programLevel: integer("ProgramLevel"),
	cbiFlag: text("CBI_Flag"),
});

export const tbls1ProcessesChangehistory = pgTable("tbls1processes_changehistory", {
	processChangeHistoryId: integer("ProcessChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	processId: integer("ProcessID"),
	altId: varchar("AltID", { length: 255 }),
	facilityId: integer("FacilityID"),
	programLevel: integer("ProgramLevel"),
	oldAltId: varchar("OldAltID", { length: 255 }),
});

export const tbls2Toxicsworstcase = pgTable("tbls2toxicsworstcase", {
	toxicId: integer("ToxicID"),
	processChemicalId: integer("ProcessChemicalID"),
	percentWeight: real("PercentWeight"),
	physicalState: text("PhysicalState"),
	analyticalBasis: text("AnalyticalBasis"),
	scenario: text("Scenario"),
	quantityReleased: real("QuantityReleased"),
	releaseDuration: real("ReleaseDuration"),
	releaseRate: real("ReleaseRate"),
	windSpeed: real("WindSpeed"),
	stabilityClass: text("StabilityClass"),
	topography: text("Topography"),
	distance2Endpoint: real("Distance2Endpoint"),
	residentialPopulation: integer("ResidentialPopulation"),
	prSchools: integer("PR_Schools"),
	prResidences: integer("PR_Residences"),
	prHospitals: integer("PR_Hospitals"),
	prPrisons: integer("PR_Prisons"),
	prPublicRecreation: integer("PR_PublicRecreation"),
	prCommInd: integer("PR_Comm_Ind"),
	prOtherType: text("PR_OtherType"),
	erNatlStateParks: integer("ER_NatlStateParks"),
	erWildlifeSanctuary: integer("ER_WildlifeSanctuary"),
	erFedWilderness: integer("ER_FedWilderness"),
	erOtherType: text("ER_OtherType"),
	pmDikes: text("PM_Dikes"),
	pmEnclosures: text("PM_Enclosures"),
	pmBerms: text("PM_Berms"),
	pmDrains: text("PM_Drains"),
	pmSumps: text("PM_Sumps"),
	pmOtherType: text("PM_OtherType"),
	cbiFlag: integer("CBI_Flag"),
});

export const tbls2ToxicsworstcaseChangehistory = pgTable("tbls2toxicsworstcase_changehistory", {
	toxicChangeHistoryId: integer("ToxicChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: text("CDXCorrectionCode"),
	toxicId: integer("ToxicID"),
	processChemicalId: integer("ProcessChemicalID"),
	percentWeight: real("PercentWeight"),
	oldPercentWeight: real("OldPercentWeight"),
	physicalState: text("PhysicalState"),
	oldPhysicalState: text("OldPhysicalState"),
	analyticalBasis: text("AnalyticalBasis"),
	oldAnalyticalBasis: text("OldAnalyticalBasis"),
	scenario: text("Scenario"),
	oldScenario: text("OldScenario"),
	quantityReleased: real("QuantityReleased"),
	oldQuantityReleased: real("OldQuantityReleased"),
	releaseDuration: real("ReleaseDuration"),
	oldReleaseDuration: real("OldReleaseDuration"),
	releaseRate: real("ReleaseRate"),
	oldReleaseRate: real("OldReleaseRate"),
	windSpeed: real("WindSpeed"),
	oldWindSpeed: real("OldWindSpeed"),
	stabilityClass: text("StabilityClass"),
	oldStabilityClass: text("OldStabilityClass"),
	topography: text("Topography"),
	oldTopography: text("OldTopography"),
	distance2Endpoint: real("Distance2Endpoint"),
	oldDistance2Endpoint: real("OldDistance2Endpoint"),
	residentialPopulation: integer("ResidentialPopulation"),
	oldResidentialPopulation: integer("OldResidentialPopulation"),
	prSchools: integer("PR_Schools"),
	oldPrSchools: integer("OldPR_Schools"),
	prResidences: integer("PR_Residences"),
	oldPrResidences: integer("OldPR_Residences"),
	prHospitals: integer("PR_Hospitals"),
	oldPrHospitals: integer("OldPR_Hospitals"),
	prPrisons: integer("PR_Prisons"),
	oldPrPrisons: integer("OldPR_Prisons"),
	prPublicRecreation: integer("PR_PublicRecreation"),
	oldPrPublicRecreation: integer("OldPR_PublicRecreation"),
	prCommInd: integer("PR_Comm_Ind"),
	oldPrCommInd: integer("OldPR_Comm_Ind"),
	prOtherType: text("PR_OtherType"),
	oldPrOtherType: text("OldPR_OtherType"),
	erNatlStateParks: integer("ER_NatlStateParks"),
	oldErNatlStateParks: integer("OldER_NatlStateParks"),
	erWildlifeSanctuary: integer("ER_WildlifeSanctuary"),
	oldErWildlifeSanctuary: integer("OldER_WildlifeSanctuary"),
	erFedWilderness: integer("ER_FedWilderness"),
	oldErFedWilderness: integer("OldER_FedWilderness"),
	erOtherType: text("ER_OtherType"),
	oldErOtherType: text("OldER_OtherType"),
	pmDikes: text("PM_Dikes"),
	oldPmDikes: text("OldPM_Dikes"),
	pmEnclosures: text("PM_Enclosures"),
	oldPmEnclosures: text("OldPM_Enclosures"),
	pmBerms: text("PM_Berms"),
	oldPmBerms: text("OldPM_Berms"),
	pmDrains: text("PM_Drains"),
	oldPmDrains: text("OldPM_Drains"),
	pmSumps: text("PM_Sumps"),
	oldPmSumps: text("OldPM_Sumps"),
	pmOtherType: text("PM_OtherType"),
	oldPmOtherType: text("OldPM_OtherType"),
});

export const tbls3Toxicsaltreleases = pgTable("tbls3toxicsaltreleases", {
	toxicId: integer("ToxicID"),
	processChemicalId: integer("ProcessChemicalID"),
	percentWeight: real("PercentWeight"),
	physicalState: text("PhysicalState"),
	analyticalBasis: text("AnalyticalBasis"),
	scenario: text("Scenario"),
	quantityReleased: real("QuantityReleased"),
	releaseDuration: real("ReleaseDuration"),
	releaseRate: real("ReleaseRate"),
	windSpeed: real("WindSpeed"),
	stabilityClass: text("StabilityClass"),
	topography: text("Topography"),
	distance2Endpoint: real("Distance2Endpoint"),
	residentialPopulation: integer("ResidentialPopulation"),
	prSchools: integer("PR_Schools"),
	prResidences: integer("PR_Residences"),
	prHospitals: integer("PR_Hospitals"),
	prPrisons: integer("PR_Prisons"),
	prPublicRecreation: integer("PR_PublicRecreation"),
	prCommInd: integer("PR_Comm_Ind"),
	prOtherType: text("PR_OtherType"),
	erNatlStateParks: integer("ER_NatlStateParks"),
	erWildlifeSanctuary: integer("ER_WildlifeSanctuary"),
	erFedWilderness: integer("ER_FedWilderness"),
	erOtherType: text("ER_OtherType"),
	pmDikes: text("PM_Dikes"),
	pmEnclosures: text("PM_Enclosures"),
	pmBerms: text("PM_Berms"),
	pmDrains: text("PM_Drains"),
	pmSumps: text("PM_Sumps"),
	pmOtherType: text("PM_OtherType"),
	amSprinklerSystems: text("AM_SprinklerSystems"),
	amDelugeSystems: text("AM_DelugeSystems"),
	amWaterCurtain: text("AM_WaterCurtain"),
	amNeutralization: text("AM_Neutralization"),
	amExcessFlowValve: text("AM_ExcessFlowValve"),
	amFlares: text("AM_Flares"),
	amScrubbers: text("AM_Scrubbers"),
	amEmergencyShutdown: text("AM_EmergencyShutdown"),
	amOtherType: text("AM_OtherType"),
	cbiFlag: integer("CBI_Flag"),
});

export const tbls3ToxicsaltreleasesChangehistory = pgTable("tbls3toxicsaltreleases_changehistory", {
	toxicAlterChangeHistoryId: integer("ToxicAlterChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: text("CDXCorrectionCode"),
	toxicId: integer("ToxicID"),
	processChemicalId: integer("ProcessChemicalID"),
	percentWeight: real("PercentWeight"),
	oldPercentWeight: real("OldPercentWeight"),
	physicalState: text("PhysicalState"),
	oldPhysicalState: text("OldPhysicalState"),
	analyticalBasis: text("AnalyticalBasis"),
	oldAnalyticalBasis: text("OldAnalyticalBasis"),
	scenario: text("Scenario"),
	oldScenario: text("OldScenario"),
	quantityReleased: real("QuantityReleased"),
	oldQuantityReleased: real("OldQuantityReleased"),
	releaseDuration: real("ReleaseDuration"),
	oldReleaseDuration: real("OldReleaseDuration"),
	releaseRate: real("ReleaseRate"),
	oldReleaseRate: real("OldReleaseRate"),
	windSpeed: real("WindSpeed"),
	oldWindSpeed: real("OldWindSpeed"),
	stabilityClass: text("StabilityClass"),
	oldStabilityClass: text("OldStabilityClass"),
	topography: text("Topography"),
	oldTopography: text("OldTopography"),
	distance2Endpoint: real("Distance2Endpoint"),
	oldDistance2Endpoint: real("OldDistance2Endpoint"),
	residentialPopulation: integer("ResidentialPopulation"),
	oldResidentialPopulation: integer("OldResidentialPopulation"),
	prSchools: integer("PR_Schools"),
	oldPrSchools: integer("OldPR_Schools"),
	prResidences: integer("PR_Residences"),
	oldPrResidences: integer("OldPR_Residences"),
	prHospitals: integer("PR_Hospitals"),
	oldPrHospitals: integer("OldPR_Hospitals"),
	prPrisons: integer("PR_Prisons"),
	oldPrPrisons: integer("OldPR_Prisons"),
	prPublicRecreation: integer("PR_PublicRecreation"),
	oldPrPublicRecreation: integer("OldPR_PublicRecreation"),
	prCommInd: integer("PR_Comm_Ind"),
	oldPrCommInd: integer("OldPR_Comm_Ind"),
	prOtherType: text("PR_OtherType"),
	oldPrOtherType: text("OldPR_OtherType"),
	erNatlStateParks: integer("ER_NatlStateParks"),
	oldErNatlStateParks: integer("OldER_NatlStateParks"),
	erWildlifeSanctuary: integer("ER_WildlifeSanctuary"),
	oldErWildlifeSanctuary: integer("OldER_WildlifeSanctuary"),
	erFedWilderness: integer("ER_FedWilderness"),
	oldErFedWilderness: integer("OldER_FedWilderness"),
	erOtherType: text("ER_OtherType"),
	oldErOtherType: text("OldER_OtherType"),
	pmDikes: text("PM_Dikes"),
	oldPmDikes: text("OldPM_Dikes"),
	pmEnclosures: text("PM_Enclosures"),
	oldPmEnclosures: text("OldPM_Enclosures"),
	pmBerms: text("PM_Berms"),
	oldPmBerms: text("OldPM_Berms"),
	pmDrains: text("PM_Drains"),
	oldPmDrains: text("OldPM_Drains"),
	pmSumps: text("PM_Sumps"),
	oldPmSumps: text("OldPM_Sumps"),
	pmOtherType: text("PM_OtherType"),
	oldPmOtherType: text("OldPM_OtherType"),
	amSprinklerSystems: text("AM_SprinklerSystems"),
	oldAmSprinklerSystems: text("OldAM_SprinklerSystems"),
	amDelugeSystems: text("AM_DelugeSystems"),
	oldAmDelugeSystems: text("OldAM_DelugeSystems"),
	amWaterCurtain: text("AM_WaterCurtain"),
	oldAmWaterCurtain: text("OldAM_WaterCurtain"),
	amNeutralization: text("AM_Neutralization"),
	oldAmNeutralization: text("OldAM_Neutralization"),
	amExcessFlowValve: text("AM_ExcessFlowValve"),
	oldAmExcessFlowValve: text("OldAM_ExcessFlowValve"),
	amFlares: text("AM_Flares"),
	oldAmFlares: text("OldAM_Flares"),
	amScrubbers: text("AM_Scrubbers"),
	oldAmScrubbers: text("OldAM_Scrubbers"),
	amEmergencyShutdown: text("AM_EmergencyShutdown"),
	oldAmEmergencyShutdown: text("OldAM_EmergencyShutdown"),
	amOtherType: text("AM_OtherType"),
	oldAmOtherType: text("OldAM_OtherType"),
});

export const tbls4Flammablesworstcase = pgTable("tbls4flammablesworstcase", {
	flammableId: integer("FlammableID"),
	processChemicalId: integer("ProcessChemicalID"),
	analyticalBasis: text("AnalyticalBasis"),
	quantityReleased: real("QuantityReleased"),
	distance2Endpoint: real("Distance2Endpoint"),
	residentialPopulation: integer("ResidentialPopulation"),
	prSchools: integer("PR_Schools"),
	prResidences: integer("PR_Residences"),
	prHospitals: integer("PR_Hospitals"),
	prPrisons: integer("PR_Prisons"),
	prPublicRecreation: integer("PR_PublicRecreation"),
	prCommInd: integer("PR_Comm_Ind"),
	prOtherType: text("PR_OtherType"),
	erNatlStateParks: integer("ER_NatlStateParks"),
	erWildlifeSanctuary: integer("ER_WildlifeSanctuary"),
	erFedWilderness: integer("ER_FedWilderness"),
	erOtherType: text("ER_OtherType"),
	pmBlastWalls: text("PM_BlastWalls"),
	pmOtherType: text("PM_OtherType"),
	cbiFlag: integer("CBI_Flag"),
});

export const tbls4FlammablesworstcaseChangehistory = pgTable("tbls4flammablesworstcase_changehistory", {
	flammableChangeHistoryId: integer("FlammableChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: text("CDXCorrectionCode"),
	flammableId: integer("FlammableID"),
	processChemicalId: integer("ProcessChemicalID"),
	analyticalBasis: text("AnalyticalBasis"),
	oldAnalyticalBasis: text("OldAnalyticalBasis"),
	quantityReleased: real("QuantityReleased"),
	oldQuantityReleased: real("OldQuantityReleased"),
	distance2Endpoint: real("Distance2Endpoint"),
	oldDistance2Endpoint: real("OldDistance2Endpoint"),
	residentialPopulation: integer("ResidentialPopulation"),
	oldResidentialPopulation: integer("OldResidentialPopulation"),
	prSchools: integer("PR_Schools"),
	oldPrSchools: integer("OldPR_Schools"),
	prResidences: integer("PR_Residences"),
	oldPrResidences: integer("OldPR_Residences"),
	prHospitals: integer("PR_Hospitals"),
	oldPrHospitals: integer("OldPR_Hospitals"),
	prPrisons: integer("PR_Prisons"),
	oldPrPrisons: integer("OldPR_Prisons"),
	prPublicRecreation: integer("PR_PublicRecreation"),
	oldPrPublicRecreation: integer("OldPR_PublicRecreation"),
	prCommInd: integer("PR_Comm_Ind"),
	oldPrCommInd: integer("OldPR_Comm_Ind"),
	prOtherType: text("PR_OtherType"),
	oldPrOtherType: text("OldPR_OtherType"),
	erNatlStateParks: integer("ER_NatlStateParks"),
	oldErNatlStateParks: integer("OldER_NatlStateParks"),
	erWildlifeSanctuary: integer("ER_WildlifeSanctuary"),
	oldErWildlifeSanctuary: integer("OldER_WildlifeSanctuary"),
	erFedWilderness: integer("ER_FedWilderness"),
	oldErFedWilderness: integer("OldER_FedWilderness"),
	erOtherType: text("ER_OtherType"),
	oldErOtherType: text("OldER_OtherType"),
	pmBlastWalls: text("PM_BlastWalls"),
	oldPmBlastWalls: text("OldPM_BlastWalls"),
	pmOtherType: text("PM_OtherType"),
	oldPmOtherType: text("OldPM_OtherType"),
});

export const tbls5Flammablesaltreleases = pgTable("tbls5flammablesaltreleases", {
	flammableId: integer("FlammableID"),
	processChemicalId: integer("ProcessChemicalID"),
	analyticalBasis: text("AnalyticalBasis"),
	scenario: text("Scenario"),
	quantityReleased: real("QuantityReleased"),
	endpointUsed: text("EndpointUsed"),
	lflValue: real("LFL_Value"),
	distance2Endpoint: real("Distance2Endpoint"),
	residentialPopulation: integer("ResidentialPopulation"),
	prSchools: integer("PR_Schools"),
	prResidences: integer("PR_Residences"),
	prHospitals: integer("PR_Hospitals"),
	prPrisons: integer("PR_Prisons"),
	prPublicRecreation: integer("PR_PublicRecreation"),
	prCommInd: integer("PR_Comm_Ind"),
	prOtherType: text("PR_OtherType"),
	erNatlStateParks: integer("ER_NatlStateParks"),
	erWildlifeSanctuary: integer("ER_WildlifeSanctuary"),
	erFedWilderness: integer("ER_FedWilderness"),
	erOtherType: text("ER_OtherType"),
	pmDikes: text("PM_Dikes"),
	pmFireWalls: text("PM_FireWalls"),
	pmBlastWalls: text("PM_BlastWalls"),
	pmEnclosures: text("PM_Enclosures"),
	pmOtherType: text("PM_OtherType"),
	amSprinklerSystems: text("AM_SprinklerSystems"),
	amDelugeSystems: text("AM_DelugeSystems"),
	amWaterCurtain: text("AM_WaterCurtain"),
	amExcessFlowValve: text("AM_ExcessFlowValve"),
	amOtherType: text("AM_OtherType"),
	cbiFlag: integer("CBI_Flag"),
});

export const tbls5FlammablesaltreleasesChangehistory = pgTable("tbls5flammablesaltreleases_changehistory", {
	flammableAltChangeHistoryId: integer("FlammableAltChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: text("CDXCorrectionCode"),
	flammableId: integer("FlammableID"),
	processChemicalId: integer("ProcessChemicalID"),
	analyticalBasis: text("AnalyticalBasis"),
	oldAnalyticalBasis: text("OldAnalyticalBasis"),
	scenario: text("Scenario"),
	oldScenario: text("OldScenario"),
	quantityReleased: real("QuantityReleased"),
	oldQuantityReleased: real("OldQuantityReleased"),
	endpointUsed: text("EndpointUsed"),
	oldEndpointUsed: text("OldEndpointUsed"),
	lflValue: real("LFL_Value"),
	oldLflValue: real("OldLFL_Value"),
	distance2Endpoint: real("Distance2Endpoint"),
	oldDistance2Endpoint: real("OldDistance2Endpoint"),
	residentialPopulation: integer("ResidentialPopulation"),
	oldResidentialPopulation: integer("OldResidentialPopulation"),
	prSchools: integer("PR_Schools"),
	oldPrSchools: integer("OldPR_Schools"),
	prResidences: integer("PR_Residences"),
	oldPrResidences: integer("OldPR_Residences"),
	prHospitals: integer("PR_Hospitals"),
	oldPrHospitals: integer("OldPR_Hospitals"),
	prPrisons: integer("PR_Prisons"),
	oldPrPrisons: integer("OldPR_Prisons"),
	prPublicRecreation: integer("PR_PublicRecreation"),
	oldPrPublicRecreation: integer("OldPR_PublicRecreation"),
	prCommInd: integer("PR_Comm_Ind"),
	oldPrCommInd: integer("OldPR_Comm_Ind"),
	prOtherType: text("PR_OtherType"),
	oldPrOtherType: text("OldPR_OtherType"),
	erNatlStateParks: integer("ER_NatlStateParks"),
	oldErNatlStateParks: integer("OldER_NatlStateParks"),
	erWildlifeSanctuary: integer("ER_WildlifeSanctuary"),
	oldErWildlifeSanctuary: integer("OldER_WildlifeSanctuary"),
	erFedWilderness: integer("ER_FedWilderness"),
	oldErFedWilderness: integer("OldER_FedWilderness"),
	erOtherType: text("ER_OtherType"),
	oldErOtherType: text("OldER_OtherType"),
	pmDikes: text("PM_Dikes"),
	oldPmDikes: text("OldPM_Dikes"),
	pmFireWalls: text("PM_FireWalls"),
	oldPmFireWalls: text("OldPM_FireWalls"),
	pmBlastWalls: text("PM_BlastWalls"),
	oldPmBlastWalls: text("OldPM_BlastWalls"),
	pmEnclosures: text("PM_Enclosures"),
	oldPmEnclosures: text("OldPM_Enclosures"),
	pmOtherType: text("PM_OtherType"),
	oldPmOtherType: text("OldPM_OtherType"),
	amSprinklerSystems: text("AM_SprinklerSystems"),
	oldAmSprinklerSystems: text("OldAM_SprinklerSystems"),
	amDelugeSystems: text("AM_DelugeSystems"),
	oldAmDelugeSystems: text("OldAM_DelugeSystems"),
	amWaterCurtain: text("AM_WaterCurtain"),
	oldAmWaterCurtain: text("OldAM_WaterCurtain"),
	amExcessFlowValve: text("AM_ExcessFlowValve"),
	oldAmExcessFlowValve: text("OldAM_ExcessFlowValve"),
	amOtherType: text("AM_OtherType"),
	oldAmOtherType: text("OldAM_OtherType"),
	ptrGraphic: text(),
	oldptrGraphic: text("OldptrGraphic"),
});

export const tbls6Accidentchemicals = pgTable("tbls6accidentchemicals", {
	accidentChemicalId: integer("AccidentChemicalID"),
	accidentHistoryId: integer("AccidentHistoryID"),
	chemicalId: integer("ChemicalID"),
	quantityReleased: real("QuantityReleased"),
	percentWeight: real("PercentWeight"),
});

export const tbls6AccidentchemicalsChangehistory = pgTable("tbls6accidentchemicals_changehistory", {
	accidentChemicalChangeHistoryId: integer("AccidentChemicalChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	accidentHistoryId: integer("AccidentHistoryID"),
	accidentChangeHistoryId: integer("AccidentChangeHistoryID"),
	accidentChemicalId: integer("AccidentChemicalID"),
	chemicalId: integer("ChemicalID"),
	quantityReleased: real("QuantityReleased"),
	oldQuantityReleased: real("OldQuantityReleased"),
	percentWeight: real("PercentWeight"),
	oldPercentWeight: real("OldPercentWeight"),
});

export const tbls6Accidenthistory = pgTable("tbls6accidenthistory", {
	accidentHistoryId: integer("AccidentHistoryID"),
	facilityId: integer("FacilityID"),
	accidentDate: text("AccidentDate"),
	accidentTime: text("AccidentTime"),
	naicsCode: text("NAICSCode"),
	accidentReleaseDuration: text("AccidentReleaseDuration"),
	reGas: text("RE_Gas"),
	reSpill: text("RE_Spill"),
	reFire: text("RE_Fire"),
	reExplosion: text("RE_Explosion"),
	reReactiveIncident: text("RE_ReactiveIncident"),
	rsStorageVessel: text("RS_StorageVessel"),
	rsPiping: text("RS_Piping"),
	rsProcessVessel: text("RS_ProcessVessel"),
	rsTransferHose: text("RS_TransferHose"),
	rsValve: text("RS_Valve"),
	rsPump: text("RS_Pump"),
	rsJoint: text("RS_Joint"),
	otherReleaseSource: text("OtherReleaseSource"),
	windSpeed: real("WindSpeed"),
	windSpeedUnitCode: text("WindSpeedUnitCode"),
	windDirection: text("WindDirection"),
	temperature: real("Temperature"),
	stabilityClass: text("StabilityClass"),
	precipitation: text("Precipitation"),
	weatherUnknown: text("WeatherUnknown"),
	deathsWorkers: integer("DeathsWorkers"),
	deathsPublicResponders: integer("DeathsPublicResponders"),
	deathsPublic: integer("DeathsPublic"),
	injuriesWorkers: integer("InjuriesWorkers"),
	injuriesPublicResponders: integer("InjuriesPublicResponders"),
	injuriesPublic: integer("InjuriesPublic"),
	onsitePropertyDamage: real("OnsitePropertyDamage"),
	offsiteDeaths: integer("OffsiteDeaths"),
	hospitalization: real("Hospitalization"),
	medicalTreatment: real("MedicalTreatment"),
	evacuated: real("Evacuated"),
	shelteredInPlace: real("ShelteredInPlace"),
	offsitePropertyDamage: real("OffsitePropertyDamage"),
	edKills: text("ED_Kills"),
	edMinorDefoliation: text("ED_MinorDefoliation"),
	edWaterContamination: text("ED_WaterContamination"),
	edSoilContamination: text("ED_SoilContamination"),
	edOther: text("ED_Other"),
	initiatingEvent: text("InitiatingEvent"),
	cfEquipmentFailure: text("CF_EquipmentFailure"),
	cfHumanError: text("CF_HumanError"),
	cfImproperProcedure: text("CF_ImproperProcedure"),
	cfOverpressurization: text("CF_Overpressurization"),
	cfUpsetCondition: text("CF_UpsetCondition"),
	cfBypassCondition: text("CF_BypassCondition"),
	cfMaintenance: text("CF_Maintenance"),
	cfProcessDesignFailure: text("CF_ProcessDesignFailure"),
	cfUnsuitableEquipment: text("CF_UnsuitableEquipment"),
	cfUnusualWeather: text("CF_UnusualWeather"),
	cfManagementError: text("CF_ManagementError"),
	cfOther: text("CF_Other"),
	offsiteRespondersNotify: text("OffsiteRespondersNotify"),
	ciImprovedEquipment: text("CI_ImprovedEquipment"),
	ciRevisedMaintenance: text("CI_RevisedMaintenance"),
	ciRevisedTraining: text("CI_RevisedTraining"),
	ciRevisedOpProcedures: text("CI_RevisedOpProcedures"),
	ciNewProcessControls: text("CI_NewProcessControls"),
	ciNewMitigationSystems: text("CI_NewMitigationSystems"),
	ciRevisedErPlan: text("CI_RevisedERPlan"),
	ciChangedProcess: text("CI_ChangedProcess"),
	ciReducedInventory: text("CI_ReducedInventory"),
	ciNone: text("CI_None"),
	ciOtherType: text("CI_OtherType"),
	cbiFlag: text("CBI_Flag"),
	publicMeeting: text("PublicMeeting"),
	publicMeetingDate: text("PublicMeetingDate"),
});

export const tbls6AccidenthistoryChangehistory = pgTable("tbls6accidenthistory_changehistory", {
	accidentChangeHistoryId: integer("AccidentChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: text("CDXCorrectionCode"),
	accidentHistoryId: integer("AccidentHistoryID"),
	facilityId: integer("FacilityID"),
	accidentDate: text("AccidentDate"),
	oldAccidentDate: text("OldAccidentDate"),
	accidentTime: text("AccidentTime"),
	oldAccidentTime: text("OldAccidentTime"),
	naicsCode: text("NAICSCode"),
	oldNaicsCode: text("OldNAICSCode"),
	accidentReleaseDuration: text("AccidentReleaseDuration"),
	oldAccidentReleaseDuration: text("OldAccidentReleaseDuration"),
	reGas: text("RE_Gas"),
	oldReGas: text("OldRE_Gas"),
	reSpill: text("RE_Spill"),
	oldReSpill: text("OldRE_Spill"),
	reFire: text("RE_Fire"),
	oldReFire: text("OldRE_Fire"),
	reExplosion: text("RE_Explosion"),
	oldReExplosion: text("OldRE_Explosion"),
	reReactiveIncident: text("RE_ReactiveIncident"),
	oldReReactiveIncident: text("OldRE_ReactiveIncident"),
	rsStorageVessel: text("RS_StorageVessel"),
	oldRsStorageVessel: text("OldRS_StorageVessel"),
	rsPiping: text("RS_Piping"),
	oldRsPiping: text("OldRS_Piping"),
	rsProcessVessel: text("RS_ProcessVessel"),
	oldRsProcessVessel: text("OldRS_ProcessVessel"),
	rsTransferHose: text("RS_TransferHose"),
	oldRsTransferHose: text("OldRS_TransferHose"),
	rsValve: text("RS_Valve"),
	oldRsValve: text("OldRS_Valve"),
	rsPump: text("RS_Pump"),
	oldRsPump: text("OldRS_Pump"),
	rsJoint: text("RS_Joint"),
	oldRsJoint: text("OldRS_Joint"),
	otherReleaseSource: text("OtherReleaseSource"),
	oldOtherReleaseSource: text("OldOtherReleaseSource"),
	windSpeed: real("WindSpeed"),
	oldWindSpeed: real("OldWindSpeed"),
	windSpeedUnitCode: text("WindSpeedUnitCode"),
	oldWindSpeedUnitCode: text("OldWindSpeedUnitCode"),
	windDirection: text("WindDirection"),
	oldWindDirection: text("OldWindDirection"),
	temperature: real("Temperature"),
	oldTemperature: real("OldTemperature"),
	stabilityClass: text("StabilityClass"),
	oldStabilityClass: text("OldStabilityClass"),
	precipitation: text("Precipitation"),
	oldPrecipitation: text("OldPrecipitation"),
	weatherUnknown: text("WeatherUnknown"),
	oldWeatherUnknown: text("OldWeatherUnknown"),
	deathsWorkers: integer("DeathsWorkers"),
	oldDeathsWorkers: integer("OldDeathsWorkers"),
	deathsPublicResponders: integer("DeathsPublicResponders"),
	oldDeathsPublicResponders: integer("OldDeathsPublicResponders"),
	deathsPublic: integer("DeathsPublic"),
	oldDeathsPublic: integer("OldDeathsPublic"),
	injuriesWorkers: integer("InjuriesWorkers"),
	oldInjuriesWorkers: integer("OldInjuriesWorkers"),
	injuriesPublicResponders: integer("InjuriesPublicResponders"),
	oldInjuriesPublicResponders: integer("OldInjuriesPublicResponders"),
	injuriesPublic: integer("InjuriesPublic"),
	oldInjuriesPublic: integer("OldInjuriesPublic"),
	onsitePropertyDamage: real("OnsitePropertyDamage"),
	oldOnsitePropertyDamage: real("OldOnsitePropertyDamage"),
	offsiteDeaths: integer("OffsiteDeaths"),
	oldOffsiteDeaths: integer("OldOffsiteDeaths"),
	hospitalization: real("Hospitalization"),
	oldHospitalization: real("OldHospitalization"),
	medicalTreatment: real("MedicalTreatment"),
	oldMedicalTreatment: real("OldMedicalTreatment"),
	evacuated: real("Evacuated"),
	oldEvacuated: real("OldEvacuated"),
	shelteredInPlace: real("ShelteredInPlace"),
	oldShelteredInPlace: real("OldShelteredInPlace"),
	offsitePropertyDamage: real("OffsitePropertyDamage"),
	oldOffsitePropertyDamage: real("OldOffsitePropertyDamage"),
	edKills: text("ED_Kills"),
	oldEdKills: text("OldED_Kills"),
	edMinorDefoliation: text("ED_MinorDefoliation"),
	oldEdMinorDefoliation: text("OldED_MinorDefoliation"),
	edWaterContamination: text("ED_WaterContamination"),
	oldEdWaterContamination: text("OldED_WaterContamination"),
	edSoilContamination: text("ED_SoilContamination"),
	oldEdSoilContamination: text("OldED_SoilContamination"),
	edOther: text("ED_Other"),
	oldEdOther: text("OldED_Other"),
	initiatingEvent: text("InitiatingEvent"),
	oldInitiatingEvent: text("OldInitiatingEvent"),
	cfEquipmentFailure: text("CF_EquipmentFailure"),
	oldCfEquipmentFailure: text("OldCF_EquipmentFailure"),
	cfHumanError: text("CF_HumanError"),
	oldCfHumanError: text("OldCF_HumanError"),
	cfImproperProcedure: text("CF_ImproperProcedure"),
	oldCfImproperProcedure: text("OldCF_ImproperProcedure"),
	cfOverpressurization: text("CF_Overpressurization"),
	oldCfOverpressurization: text("OldCF_Overpressurization"),
	cfUpsetCondition: text("CF_UpsetCondition"),
	oldCfUpsetCondition: text("OldCF_UpsetCondition"),
	cfBypassCondition: text("CF_BypassCondition"),
	oldCfBypassCondition: text("OldCF_BypassCondition"),
	cfMaintenance: text("CF_Maintenance"),
	oldCfMaintenance: text("OldCF_Maintenance"),
	cfProcessDesignFailure: text("CF_ProcessDesignFailure"),
	oldCfProcessDesignFailure: text("OldCF_ProcessDesignFailure"),
	cfUnsuitableEquipment: text("CF_UnsuitableEquipment"),
	oldCfUnsuitableEquipment: text("OldCF_UnsuitableEquipment"),
	cfUnusualWeather: text("CF_UnusualWeather"),
	oldCfUnusualWeather: text("OldCF_UnusualWeather"),
	cfManagementError: text("CF_ManagementError"),
	oldCfManagementError: text("OldCF_ManagementError"),
	cfOther: text("CF_Other"),
	oldCfOther: text("OldCF_Other"),
	offsiteRespondersNotify: text("OffsiteRespondersNotify"),
	oldOffsiteRespondersNotify: text("OldOffsiteRespondersNotify"),
	ciImprovedEquipment: text("CI_ImprovedEquipment"),
	oldCiImprovedEquipment: text("OldCI_ImprovedEquipment"),
	ciRevisedMaintenance: text("CI_RevisedMaintenance"),
	oldCiRevisedMaintenance: text("OldCI_RevisedMaintenance"),
	ciRevisedTraining: text("CI_RevisedTraining"),
	oldCiRevisedTraining: text("OldCI_RevisedTraining"),
	ciRevisedOpProcedures: text("CI_RevisedOpProcedures"),
	oldCiRevisedOpProcedures: text("OldCI_RevisedOpProcedures"),
	ciNewProcessControls: text("CI_NewProcessControls"),
	oldCiNewProcessControls: text("OldCI_NewProcessControls"),
	ciNewMitigationSystems: text("CI_NewMitigationSystems"),
	oldCiNewMitigationSystems: text("OldCI_NewMitigationSystems"),
	ciRevisedErPlan: text("CI_RevisedERPlan"),
	oldCiRevisedErPlan: text("OldCI_RevisedERPlan"),
	ciChangedProcess: text("CI_ChangedProcess"),
	oldCiChangedProcess: text("OldCI_ChangedProcess"),
	ciReducedInventory: text("CI_ReducedInventory"),
	oldCiReducedInventory: text("OldCI_ReducedInventory"),
	ciNone: text("CI_None"),
	oldCiNone: text("OldCI_None"),
	ciOtherType: text("CI_OtherType"),
	oldCiOtherType: text("OldCI_OtherType"),
	cbiFlag: text("CBI_Flag"),
	oldCbiFlag: text("OldCBI_Flag"),
	publicMeeting: text("PublicMeeting"),
	oldPublicMeeting: text("OldPublicMeeting"),
	publicMeetingDate: text("PublicMeetingDate"),
	oldPublicMeetingDate: text("OldPublicMeetingDate"),
});

export const tbls6Flammablemixturechemicals = pgTable("tbls6flammablemixturechemicals", {
	flamMixChemId: integer("FlamMixChemID"),
	accidentChemicalId: integer("AccidentChemicalID"),
	chemicalId: integer("ChemicalID"),
});

export const tbls6FlammablemixturechemicalsChangehistory = pgTable("tbls6flammablemixturechemicals_changehistory", {
	accidentFlamMixChemChangeHistoryId: integer("AccidentFlamMixChemChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	flamMixChemId: integer("FlamMixChemID"),
	accidentChemicalChangeHistoryId: integer("AccidentChemicalChangeHistoryID"),
	accidentChemicalId: integer("AccidentChemicalID"),
	chemicalId: integer("ChemicalID"),
});

export const tbls7Preventionprogram3 = pgTable("tbls7preventionprogram3", {
	preventionProgram3Id: integer("PreventionProgram3ID"),
	processNaicsId: integer("Process_NAICS_ID"),
	safetyReviewDate: text("SafetyReviewDate"),
	phaDate: text("PHA_Date"),
	phaWhatIf: text("PHA_WhatIf"),
	phaChecklist: text("PHA_Checklist"),
	phaWhatIfChecklist: text("PHA_WhatIfChecklist"),
	phaHazop: text("PHA_HAZOP"),
	phaFmea: text("PHA_FMEA"),
	phaFta: text("PHA_FTA"),
	phaOtherTechnique: text("PHA_OtherTechnique"),
	phaCompletionDate: text("PHACompletionDate"),
	mhToxicRelease: text("MH_ToxicRelease"),
	mhFire: text("MH_Fire"),
	mhExplosion: text("MH_Explosion"),
	mhRunawayReaction: text("MH_RunawayReaction"),
	mhPolymerization: text("MH_Polymerization"),
	mhOverpressurization: text("MH_Overpressurization"),
	mhCorrosion: text("MH_Corrosion"),
	mhOverfilling: text("MH_Overfilling"),
	mhContamination: text("MH_Contamination"),
	mhEquipmentFailure: text("MH_EquipmentFailure"),
	mhCoolingLoss: text("MH_CoolingLoss"),
	mhEarthquake: text("MH_Earthquake"),
	mhFloods: text("MH_Floods"),
	mhTornado: text("MH_Tornado"),
	mhHurricanes: text("MH_Hurricanes"),
	mhOtherType: text("MH_OtherType"),
	pcVents: text("PC_Vents"),
	pcReliefValves: text("PC_ReliefValves"),
	pcCheckValves: text("PC_CheckValves"),
	pcScrubbers: text("PC_Scrubbers"),
	pcFlares: text("PC_Flares"),
	pcManualShutoffs: text("PC_ManualShutoffs"),
	pcAutomaticShutoffs: text("PC_AutomaticShutoffs"),
	pcInterlocks: text("PC_Interlocks"),
	pcAlarms: text("PC_Alarms"),
	pcKeyedBypass: text("PC_KeyedBypass"),
	pcEmergencyAirSupply: text("PC_EmergencyAirSupply"),
	pcEmergencyPower: text("PC_EmergencyPower"),
	pcBackupPump: text("PC_BackupPump"),
	pcGroundingEquipment: text("PC_GroundingEquipment"),
	pcInhibitorAddition: text("PC_InhibitorAddition"),
	pcRuptureDisks: text("PC_RuptureDisks"),
	pcExcessFlowDevice: text("PC_ExcessFlowDevice"),
	pcQuenchSystem: text("PC_QuenchSystem"),
	pcPurgeSystem: text("PC_PurgeSystem"),
	pcNone: text("PC_None"),
	pcOtherType: text("PC_OtherType"),
	msSprinklerSystem: text("MS_SprinklerSystem"),
	msDikes: text("MS_Dikes"),
	msFireWalls: text("MS_FireWalls"),
	msBlastWalls: text("MS_BlastWalls"),
	msDelugeSystem: text("MS_DelugeSystem"),
	msWaterCurtain: text("MS_WaterCurtain"),
	msEnclosure: text("MS_Enclosure"),
	msNeutralization: text("MS_Neutralization"),
	msNone: text("MS_None"),
	msOtherType: text("MS_OtherType"),
	mdProcessAreaDetectors: text("MD_ProcessAreaDetectors"),
	mdPerimeterMonitors: text("MD_PerimeterMonitors"),
	mdNone: text("MD_None"),
	mdOtherType: text("MD_OtherType"),
	chChemicalReduction: text("CH_ChemicalReduction"),
	chChemicalIncrease: text("CH_ChemicalIncrease"),
	chChangeProcessParameters: text("CH_ChangeProcessParameters"),
	chInstallProcessControls: text("CH_InstallProcessControls"),
	chInstallProcessDetection: text("CH_InstallProcessDetection"),
	chInstallPerimeterMonitoring: text("CH_InstallPerimeterMonitoring"),
	chInstallMitigationSystems: text("CH_InstallMitigationSystems"),
	chNoneRequired: text("CH_NoneRequired"),
	chNone: text("CH_None"),
	chOtherChanges: text("CH_OtherChanges"),
	opProceduresReviewDate: text("OpProceduresReviewDate"),
	trainingReviewDate: text("TrainingReviewDate"),
	trClassroom: text("TR_Classroom"),
	trOnTheJob: text("TR_OnTheJob"),
	trOtherType: text("TR_OtherType"),
	ctWrittenTest: text("CT_WrittenTest"),
	ctOralTest: text("CT_OralTest"),
	ctDemonstration: text("CT_Demonstration"),
	ctObservation: text("CT_Observation"),
	ctOtherType: text("CT_OtherType"),
	maintenanceReviewDate: text("MaintenanceReviewDate"),
	equipmentInspectionDate: text("EquipmentInspectionDate"),
	equipmentTested: text("EquipmentTested"),
	changeMgmtDate: text("ChangeMgmtDate"),
	changeMgmtReviewDate: text("ChangeMgmtReviewDate"),
	preStartupReviewDate: text("PreStartupReviewDate"),
	complianceAuditDate: text("ComplianceAuditDate"),
	auditCompletionDate: text("AuditCompletionDate"),
	incidentInvestigationDate: text("IncidentInvestigationDate"),
	investigationChangeDate: text("InvestigationChangeDate"),
	participationPlansReviewDate: text("ParticipationPlansReviewDate"),
	hotWorkPermitReviewDate: text("HotWorkPermitReviewDate"),
	contractorSafetyReviewDate: text("ContractorSafetyReviewDate"),
	contractorSafetyEvalDate: text("ContractorSafetyEvalDate"),
	cbiFlag: text("CBI_Flag"),
	description: text("Description"),
});

export const tbls7Preventionprogram3DescriptionChangehistory = pgTable("tbls7preventionprogram3description_changehistory", {
	preventionProgram3DescChangeHistoryId: integer("PreventionProgram3DescChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	preventionProgram3Id: integer("PreventionProgram3ID"),
	description: text("Description"),
	oldDescription: text("OldDescription"),
	seqNum: integer("SeqNum"),
});

export const tbls7Preventionprogram3Changehistory = pgTable("tbls7preventionprogram3_changehistory", {
	preventionProgram3ChangeHistoryId: integer("PreventionProgram3ChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: text("CDXCorrectionCode"),
	preventionProgram3Id: integer("PreventionProgram3ID"),
	naicsCode: text("NAICSCode"),
	processNaicsId: integer("Process_NAICS_ID"),
	processId: integer("ProcessID"),
	safetyReviewDate: text("SafetyReviewDate"),
	oldSafetyReviewDate: text("OldSafetyReviewDate"),
	phaDate: text("PHA_Date"),
	oldPhaDate: text("OldPHA_Date"),
	phaWhatIf: text("PHA_WhatIf"),
	oldPhaWhatIf: text("OldPHA_WhatIf"),
	phaChecklist: text("PHA_Checklist"),
	oldPhaChecklist: text("OldPHA_Checklist"),
	phaWhatIfChecklist: text("PHA_WhatIfChecklist"),
	oldPhaWhatIfChecklist: text("OldPHA_WhatIfChecklist"),
	phaHazop: text("PHA_HAZOP"),
	oldPhaHazop: text("OldPHA_HAZOP"),
	phaFmea: text("PHA_FMEA"),
	oldPhaFmea: text("OldPHA_FMEA"),
	phaFta: text("PHA_FTA"),
	oldPhaFta: text("OldPHA_FTA"),
	phaOtherTechnique: text("PHA_OtherTechnique"),
	oldPhaOtherTechnique: text("OldPHA_OtherTechnique"),
	phaCompletionDate: text("PHACompletionDate"),
	oldPhaCompletionDate: text("OldPHACompletionDate"),
	mhToxicRelease: text("MH_ToxicRelease"),
	oldMhToxicRelease: text("OldMH_ToxicRelease"),
	mhFire: text("MH_Fire"),
	oldMhFire: text("OldMH_Fire"),
	mhExplosion: text("MH_Explosion"),
	oldMhExplosion: text("OldMH_Explosion"),
	mhRunawayReaction: text("MH_RunawayReaction"),
	oldMhRunawayReaction: text("OldMH_RunawayReaction"),
	mhPolymerization: text("MH_Polymerization"),
	oldMhPolymerization: text("OldMH_Polymerization"),
	mhOverpressurization: text("MH_Overpressurization"),
	oldMhOverpressurization: text("OldMH_Overpressurization"),
	mhCorrosion: text("MH_Corrosion"),
	oldMhCorrosion: text("OldMH_Corrosion"),
	mhOverfilling: text("MH_Overfilling"),
	oldMhOverfilling: text("OldMH_Overfilling"),
	mhContamination: text("MH_Contamination"),
	oldMhContamination: text("OldMH_Contamination"),
	mhEquipmentFailure: text("MH_EquipmentFailure"),
	oldMhEquipmentFailure: text("OldMH_EquipmentFailure"),
	mhCoolingLoss: text("MH_CoolingLoss"),
	oldMhCoolingLoss: text("OldMH_CoolingLoss"),
	mhEarthquake: text("MH_Earthquake"),
	oldMhEarthquake: text("OldMH_Earthquake"),
	mhFloods: text("MH_Floods"),
	oldMhFloods: text("OldMH_Floods"),
	mhTornado: text("MH_Tornado"),
	oldMhTornado: text("OldMH_Tornado"),
	mhHurricanes: text("MH_Hurricanes"),
	oldMhHurricanes: text("OldMH_Hurricanes"),
	mhOtherType: text("MH_OtherType"),
	oldMhOtherType: text("OldMH_OtherType"),
	pcVents: text("PC_Vents"),
	oldPcVents: text("OldPC_Vents"),
	pcReliefValves: text("PC_ReliefValves"),
	oldPcReliefValves: text("OldPC_ReliefValves"),
	pcCheckValves: text("PC_CheckValves"),
	oldPcCheckValves: text("OldPC_CheckValves"),
	pcScrubbers: text("PC_Scrubbers"),
	oldPcScrubbers: text("OldPC_Scrubbers"),
	pcFlares: text("PC_Flares"),
	oldPcFlares: text("OldPC_Flares"),
	pcManualShutoffs: text("PC_ManualShutoffs"),
	oldPcManualShutoffs: text("OldPC_ManualShutoffs"),
	pcAutomaticShutoffs: text("PC_AutomaticShutoffs"),
	oldPcAutomaticShutoffs: text("OldPC_AutomaticShutoffs"),
	pcInterlocks: text("PC_Interlocks"),
	oldPcInterlocks: text("OldPC_Interlocks"),
	pcAlarms: text("PC_Alarms"),
	oldPcAlarms: text("OldPC_Alarms"),
	pcKeyedBypass: text("PC_KeyedBypass"),
	oldPcKeyedBypass: text("OldPC_KeyedBypass"),
	pcEmergencyAirSupply: text("PC_EmergencyAirSupply"),
	oldPcEmergencyAirSupply: text("OldPC_EmergencyAirSupply"),
	pcEmergencyPower: text("PC_EmergencyPower"),
	oldPcEmergencyPower: text("OldPC_EmergencyPower"),
	pcBackupPump: text("PC_BackupPump"),
	oldPcBackupPump: text("OldPC_BackupPump"),
	pcGroundingEquipment: text("PC_GroundingEquipment"),
	oldPcGroundingEquipment: text("OldPC_GroundingEquipment"),
	pcInhibitorAddition: text("PC_InhibitorAddition"),
	oldPcInhibitorAddition: text("OldPC_InhibitorAddition"),
	pcRuptureDisks: text("PC_RuptureDisks"),
	oldPcRuptureDisks: text("OldPC_RuptureDisks"),
	pcExcessFlowDevice: text("PC_ExcessFlowDevice"),
	oldPcExcessFlowDevice: text("OldPC_ExcessFlowDevice"),
	pcQuenchSystem: text("PC_QuenchSystem"),
	oldPcQuenchSystem: text("OldPC_QuenchSystem"),
	pcPurgeSystem: text("PC_PurgeSystem"),
	oldPcPurgeSystem: text("OldPC_PurgeSystem"),
	pcNone: text("PC_None"),
	oldPcNone: text("OldPC_None"),
	pcOtherType: text("PC_OtherType"),
	oldPcOtherType: text("OldPC_OtherType"),
	msSprinklerSystem: text("MS_SprinklerSystem"),
	oldMsSprinklerSystem: text("OldMS_SprinklerSystem"),
	msDikes: text("MS_Dikes"),
	oldMsDikes: text("OldMS_Dikes"),
	msFireWalls: text("MS_FireWalls"),
	oldMsFireWalls: text("OldMS_FireWalls"),
	msBlastWalls: text("MS_BlastWalls"),
	oldMsBlastWalls: text("OldMS_BlastWalls"),
	msDelugeSystem: text("MS_DelugeSystem"),
	oldMsDelugeSystem: text("OldMS_DelugeSystem"),
	msWaterCurtain: text("MS_WaterCurtain"),
	oldMsWaterCurtain: text("OldMS_WaterCurtain"),
	msEnclosure: text("MS_Enclosure"),
	oldMsEnclosure: text("OldMS_Enclosure"),
	msNeutralization: text("MS_Neutralization"),
	oldMsNeutralization: text("OldMS_Neutralization"),
	msNone: text("MS_None"),
	oldMsNone: text("OldMS_None"),
	msOtherType: text("MS_OtherType"),
	oldMsOtherType: text("OldMS_OtherType"),
	mdProcessAreaDetectors: text("MD_ProcessAreaDetectors"),
	oldMdProcessAreaDetectors: text("OldMD_ProcessAreaDetectors"),
	mdPerimeterMonitors: text("MD_PerimeterMonitors"),
	oldMdPerimeterMonitors: text("OldMD_PerimeterMonitors"),
	mdNone: text("MD_None"),
	oldMdNone: text("OldMD_None"),
	mdOtherType: text("MD_OtherType"),
	oldMdOtherType: text("OldMD_OtherType"),
	chChemicalReduction: text("CH_ChemicalReduction"),
	oldChChemicalReduction: text("OldCH_ChemicalReduction"),
	chChemicalIncrease: text("CH_ChemicalIncrease"),
	oldChChemicalIncrease: text("OldCH_ChemicalIncrease"),
	chChangeProcessParameters: text("CH_ChangeProcessParameters"),
	oldChChangeProcessParameters: text("OldCH_ChangeProcessParameters"),
	chInstallProcessControls: text("CH_InstallProcessControls"),
	oldChInstallProcessControls: text("OldCH_InstallProcessControls"),
	chInstallProcessDetection: text("CH_InstallProcessDetection"),
	oldChInstallProcessDetection: text("OldCH_InstallProcessDetection"),
	chInstallPerimeterMonitoring: text("CH_InstallPerimeterMonitoring"),
	oldChInstallPerimeterMonitoring: text("OldCH_InstallPerimeterMonitoring"),
	chInstallMitigationSystems: text("CH_InstallMitigationSystems"),
	oldChInstallMitigationSystems: text("OldCH_InstallMitigationSystems"),
	chNoneRequired: text("CH_NoneRequired"),
	oldChNoneRequired: text("OldCH_NoneRequired"),
	chNone: text("CH_None"),
	oldChNone: text("OldCH_None"),
	chOtherChanges: text("CH_OtherChanges"),
	oldChOtherChanges: text("OldCH_OtherChanges"),
	opProceduresReviewDate: text("OpProceduresReviewDate"),
	oldOpProceduresReviewDate: text("OldOpProceduresReviewDate"),
	trainingReviewDate: text("TrainingReviewDate"),
	oldTrainingReviewDate: text("OldTrainingReviewDate"),
	trClassroom: text("TR_Classroom"),
	oldTrClassroom: text("OldTR_Classroom"),
	trOnTheJob: text("TR_OnTheJob"),
	oldTrOnTheJob: text("OldTR_OnTheJob"),
	trOtherType: text("TR_OtherType"),
	oldTrOtherType: text("OldTR_OtherType"),
	ctWrittenTest: text("CT_WrittenTest"),
	oldCtWrittenTest: text("OldCT_WrittenTest"),
	ctOralTest: text("CT_OralTest"),
	oldCtOralTest: text("OldCT_OralTest"),
	ctDemonstration: text("CT_Demonstration"),
	oldCtDemonstration: text("OldCT_Demonstration"),
	ctObservation: text("CT_Observation"),
	oldCtObservation: text("OldCT_Observation"),
	ctOtherType: text("CT_OtherType"),
	oldCtOtherType: text("OldCT_OtherType"),
	maintenanceReviewDate: text("MaintenanceReviewDate"),
	oldMaintenanceReviewDate: text("OldMaintenanceReviewDate"),
	equipmentInspectionDate: text("EquipmentInspectionDate"),
	oldEquipmentInspectionDate: text("OldEquipmentInspectionDate"),
	equipmentTested: text("EquipmentTested"),
	oldEquipmentTested: text("OldEquipmentTested"),
	changeMgmtDate: text("ChangeMgmtDate"),
	oldChangeMgmtDate: text("OldChangeMgmtDate"),
	changeMgmtReviewDate: text("ChangeMgmtReviewDate"),
	oldChangeMgmtReviewDate: text("OldChangeMgmtReviewDate"),
	preStartupReviewDate: text("PreStartupReviewDate"),
	oldPreStartupReviewDate: text("OldPreStartupReviewDate"),
	complianceAuditDate: text("ComplianceAuditDate"),
	oldComplianceAuditDate: text("OldComplianceAuditDate"),
	auditCompletionDate: text("AuditCompletionDate"),
	oldAuditCompletionDate: text("OldAuditCompletionDate"),
	incidentInvestigationDate: text("IncidentInvestigationDate"),
	oldIncidentInvestigationDate: text("OldIncidentInvestigationDate"),
	investigationChangeDate: text("InvestigationChangeDate"),
	oldInvestigationChangeDate: text("OldInvestigationChangeDate"),
	participationPlansReviewDate: text("ParticipationPlansReviewDate"),
	oldParticipationPlansReviewDate: text("OldParticipationPlansReviewDate"),
	hotWorkPermitReviewDate: text("HotWorkPermitReviewDate"),
	oldHotWorkPermitReviewDate: text("OldHotWorkPermitReviewDate"),
	contractorSafetyReviewDate: text("ContractorSafetyReviewDate"),
	oldContractorSafetyReviewDate: text("OldContractorSafetyReviewDate"),
	contractorSafetyEvalDate: text("ContractorSafetyEvalDate"),
	oldContractorSafetyEvalDate: text("OldContractorSafetyEvalDate"),
});

export const tbls7PreventionProgramChemicals = pgTable("tbls7_prevention_program_chemicals", {
	primaryKey: integer("PrimaryKey"),
	preventionProgram3Id: integer("PreventionProgram3ID"),
	processChemicalId: integer("ProcessChemicalID"),
});

export const tbls7PreventionProgramChemicalsChangehistory = pgTable("tbls7_prevention_program_chemicals_changehistory", {
	pp3ChemChangeHistoryId: integer("PP3ChemChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	pp3ChemId: integer("PP3ChemID"),
	preventionProgram3Id: integer("PreventionProgram3ID"),
	processChemicalId: integer("ProcessChemicalID"),
	processNaicsId: integer("Process_NAICS_ID"),
	naicsCode: varchar("NAICSCode", { length: 255 }),
});

export const tbls8Preventionprogram2 = pgTable("tbls8preventionprogram2", {
	preventionProgram2Id: integer("PreventionProgram2ID"),
	processNaicsId: integer("Process_NAICS_ID"),
	safetyReviewDate: text("SafetyReviewDate"),
	frNfpa58: text("FR_NFPA58"),
	frOsha: text("FR_OSHA"),
	frAstm: text("FR_ASTM"),
	frAnsi: text("FR_ANSI"),
	frAsme: text("FR_ASME"),
	frNone: text("FR_None"),
	frOtherType: text("FR_OtherType"),
	frComments: text("FR_Comments"),
	hazardReviewDate: text("HazardReviewDate"),
	changeCompletionDate: text("ChangeCompletionDate"),
	mhToxicRelease: text("MH_ToxicRelease"),
	mhFire: text("MH_Fire"),
	mhExplosion: text("MH_Explosion"),
	mhRunawayReaction: text("MH_RunawayReaction"),
	mhPolymerization: text("MH_Polymerization"),
	mhOverpressurization: text("MH_Overpressurization"),
	mhCorrosion: text("MH_Corrosion"),
	mhOverfilling: text("MH_Overfilling"),
	mhContamination: text("MH_Contamination"),
	mhEquipmentFailure: text("MH_EquipmentFailure"),
	mhCoolingLoss: text("MH_CoolingLoss"),
	mhEarthquake: text("MH_Earthquake"),
	mhFloods: text("MH_Floods"),
	mhTornado: text("MH_Tornado"),
	mhHurricanes: text("MH_Hurricanes"),
	mhOtherType: text("MH_OtherType"),
	pcVents: text("PC_Vents"),
	pcReliefValves: text("PC_ReliefValves"),
	pcCheckValves: text("PC_CheckValves"),
	pcScrubbers: text("PC_Scrubbers"),
	pcFlares: text("PC_Flares"),
	pcManualShutoffs: text("PC_ManualShutoffs"),
	pcAutomaticShutoffs: text("PC_AutomaticShutoffs"),
	pcInterlocks: text("PC_Interlocks"),
	pcAlarms: text("PC_Alarms"),
	pcKeyedBypass: text("PC_KeyedBypass"),
	pcEmergencyAirSupply: text("PC_EmergencyAirSupply"),
	pcEmergencyPower: text("PC_EmergencyPower"),
	pcBackupPump: text("PC_BackupPump"),
	pcGroundingEquipment: text("PC_GroundingEquipment"),
	pcInhibitorAddition: text("PC_InhibitorAddition"),
	pcRuptureDisks: text("PC_RuptureDisks"),
	pcExcessFlowDevice: text("PC_ExcessFlowDevice"),
	pcQuenchSystem: text("PC_QuenchSystem"),
	pcPurgeSystem: text("PC_PurgeSystem"),
	pcNone: text("PC_None"),
	pcOtherType: text("PC_OtherType"),
	msSprinklerSystem: text("MS_SprinklerSystem"),
	msDikes: text("MS_Dikes"),
	msFireWalls: text("MS_FireWalls"),
	msBlastWalls: text("MS_BlastWalls"),
	msDelugeSystem: text("MS_DelugeSystem"),
	msWaterCurtain: text("MS_WaterCurtain"),
	msEnclosure: text("MS_Enclosure"),
	msNeutralization: text("MS_Neutralization"),
	msNone: text("MS_None"),
	msOtherType: text("MS_OtherType"),
	mdProcessAreaDetectors: text("MD_ProcessAreaDetectors"),
	mdPerimeterMonitors: text("MD_PerimeterMonitors"),
	mdNone: text("MD_None"),
	mdOtherType: text("MD_OtherType"),
	chChemicalReduction: text("CH_ChemicalReduction"),
	chChemicalIncrease: text("CH_ChemicalIncrease"),
	chChangeProcessParameters: text("CH_ChangeProcessParameters"),
	chInstallProcessControls: text("CH_InstallProcessControls"),
	chInstallProcessDetection: text("CH_InstallProcessDetection"),
	chInstallPerimeterMonitoring: text("CH_InstallPerimeterMonitoring"),
	chInstallMitigationSystems: text("CH_InstallMitigationSystems"),
	chNoneRequired: text("CH_NoneRequired"),
	chNone: text("CH_None"),
	chOtherChanges: text("CH_OtherChanges"),
	opProceduresReviewDate: text("OpProceduresReviewDate"),
	trainingReviewDate: text("TrainingReviewDate"),
	trClassroom: text("TR_Classroom"),
	trOnTheJob: text("TR_OnTheJob"),
	trOtherType: text("TR_OtherType"),
	ctWrittenTest: text("CT_WrittenTest"),
	ctOralTest: text("CT_OralTest"),
	ctDemonstration: text("CT_Demonstration"),
	ctObservation: text("CT_Observation"),
	ctOtherType: text("CT_OtherType"),
	maintenanceReviewDate: text("MaintenanceReviewDate"),
	equipmentInspectionDate: text("EquipmentInspectionDate"),
	equipmentTested: text("EquipmentTested"),
	complianceAuditDate: text("ComplianceAuditDate"),
	auditCompletionDate: text("AuditCompletionDate"),
	incidentInvestigationDate: text("IncidentInvestigationDate"),
	investigationChangeDate: text("InvestigationChangeDate"),
	mostRecentChangeDate: text("MostRecentChangeDate"),
	cbiFlag: text("CBI_Flag"),
	description: text("Description"),
});

export const tbls8Preventionprogram2DescriptionChangehistory = pgTable("tbls8preventionprogram2description_changehistory", {
	preventionProgram2DescChangeHistoryId: integer("PreventionProgram2DescChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	preventionProgram2Id: integer("PreventionProgram2ID"),
	description: text("Description"),
	oldDescription: text("OldDescription"),
	seqNum: integer("SeqNum"),
});

export const tbls8Preventionprogram2Changehistory = pgTable("tbls8preventionprogram2_changehistory", {
	preventionProgram2ChangeHistoryId: integer("PreventionProgram2ChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: text("CDXCorrectionCode"),
	preventionProgram2Id: integer("PreventionProgram2ID"),
	naicsCode: text("NAICSCode"),
	processNaicsId: integer("Process_NAICS_ID"),
	processId: integer("ProcessID"),
	safetyReviewDate: text("SafetyReviewDate"),
	oldSafetyReviewDate: text("OldSafetyReviewDate"),
	frNfpa58: text("FR_NFPA58"),
	oldFrNfpa58: text("OldFR_NFPA58"),
	frOsha: text("FR_OSHA"),
	oldFrOsha: text("OldFR_OSHA"),
	frAstm: text("FR_ASTM"),
	oldFrAstm: text("OldFR_ASTM"),
	frAnsi: text("FR_ANSI"),
	oldFrAnsi: text("OldFR_ANSI"),
	frAsme: text("FR_ASME"),
	oldFrAsme: text("OldFR_ASME"),
	frNone: text("FR_None"),
	oldFrNone: text("OldFR_None"),
	frOtherType: text("FR_OtherType"),
	oldFrOtherType: text("OldFR_OtherType"),
	frComments: text("FR_Comments"),
	oldFrComments: text("OldFR_Comments"),
	hazardReviewDate: text("HazardReviewDate"),
	oldHazardReviewDate: text("OldHazardReviewDate"),
	changeCompletionDate: text("ChangeCompletionDate"),
	oldChangeCompletionDate: text("OldChangeCompletionDate"),
	mhToxicRelease: text("MH_ToxicRelease"),
	oldMhToxicRelease: text("OldMH_ToxicRelease"),
	mhFire: text("MH_Fire"),
	oldMhFire: text("OldMH_Fire"),
	mhExplosion: text("MH_Explosion"),
	oldMhExplosion: text("OldMH_Explosion"),
	mhRunawayReaction: text("MH_RunawayReaction"),
	oldMhRunawayReaction: text("OldMH_RunawayReaction"),
	mhPolymerization: text("MH_Polymerization"),
	oldMhPolymerization: text("OldMH_Polymerization"),
	mhOverpressurization: text("MH_Overpressurization"),
	oldMhOverpressurization: text("OldMH_Overpressurization"),
	mhCorrosion: text("MH_Corrosion"),
	oldMhCorrosion: text("OldMH_Corrosion"),
	mhOverfilling: text("MH_Overfilling"),
	oldMhOverfilling: text("OldMH_Overfilling"),
	mhContamination: text("MH_Contamination"),
	oldMhContamination: text("OldMH_Contamination"),
	mhEquipmentFailure: text("MH_EquipmentFailure"),
	oldMhEquipmentFailure: text("OldMH_EquipmentFailure"),
	mhCoolingLoss: text("MH_CoolingLoss"),
	oldMhCoolingLoss: text("OldMH_CoolingLoss"),
	mhEarthquake: text("MH_Earthquake"),
	oldMhEarthquake: text("OldMH_Earthquake"),
	mhFloods: text("MH_Floods"),
	oldMhFloods: text("OldMH_Floods"),
	mhTornado: text("MH_Tornado"),
	oldMhTornado: text("OldMH_Tornado"),
	mhHurricanes: text("MH_Hurricanes"),
	oldMhHurricanes: text("OldMH_Hurricanes"),
	mhOtherType: text("MH_OtherType"),
	oldMhOtherType: text("OldMH_OtherType"),
	pcVents: text("PC_Vents"),
	oldPcVents: text("OldPC_Vents"),
	pcReliefValves: text("PC_ReliefValves"),
	oldPcReliefValves: text("OldPC_ReliefValves"),
	pcCheckValves: text("PC_CheckValves"),
	oldPcCheckValves: text("OldPC_CheckValves"),
	pcScrubbers: text("PC_Scrubbers"),
	oldPcScrubbers: text("OldPC_Scrubbers"),
	pcFlares: text("PC_Flares"),
	oldPcFlares: text("OldPC_Flares"),
	pcManualShutoffs: text("PC_ManualShutoffs"),
	oldPcManualShutoffs: text("OldPC_ManualShutoffs"),
	pcAutomaticShutoffs: text("PC_AutomaticShutoffs"),
	oldPcAutomaticShutoffs: text("OldPC_AutomaticShutoffs"),
	pcInterlocks: text("PC_Interlocks"),
	oldPcInterlocks: text("OldPC_Interlocks"),
	pcAlarms: text("PC_Alarms"),
	oldPcAlarms: text("OldPC_Alarms"),
	pcKeyedBypass: text("PC_KeyedBypass"),
	oldPcKeyedBypass: text("OldPC_KeyedBypass"),
	pcEmergencyAirSupply: text("PC_EmergencyAirSupply"),
	oldPcEmergencyAirSupply: text("OldPC_EmergencyAirSupply"),
	pcEmergencyPower: text("PC_EmergencyPower"),
	oldPcEmergencyPower: text("OldPC_EmergencyPower"),
	pcBackupPump: text("PC_BackupPump"),
	oldPcBackupPump: text("OldPC_BackupPump"),
	pcGroundingEquipment: text("PC_GroundingEquipment"),
	oldPcGroundingEquipment: text("OldPC_GroundingEquipment"),
	pcInhibitorAddition: text("PC_InhibitorAddition"),
	oldPcInhibitorAddition: text("OldPC_InhibitorAddition"),
	pcRuptureDisks: text("PC_RuptureDisks"),
	oldPcRuptureDisks: text("OldPC_RuptureDisks"),
	pcExcessFlowDevice: text("PC_ExcessFlowDevice"),
	oldPcExcessFlowDevice: text("OldPC_ExcessFlowDevice"),
	pcQuenchSystem: text("PC_QuenchSystem"),
	oldPcQuenchSystem: text("OldPC_QuenchSystem"),
	pcPurgeSystem: text("PC_PurgeSystem"),
	oldPcPurgeSystem: text("OldPC_PurgeSystem"),
	pcNone: text("PC_None"),
	oldPcNone: text("OldPC_None"),
	pcOtherType: text("PC_OtherType"),
	oldPcOtherType: text("OldPC_OtherType"),
	msSprinklerSystem: text("MS_SprinklerSystem"),
	oldMsSprinklerSystem: text("OldMS_SprinklerSystem"),
	msDikes: text("MS_Dikes"),
	oldMsDikes: text("OldMS_Dikes"),
	msFireWalls: text("MS_FireWalls"),
	oldMsFireWalls: text("OldMS_FireWalls"),
	msBlastWalls: text("MS_BlastWalls"),
	oldMsBlastWalls: text("OldMS_BlastWalls"),
	msDelugeSystem: text("MS_DelugeSystem"),
	oldMsDelugeSystem: text("OldMS_DelugeSystem"),
	msWaterCurtain: text("MS_WaterCurtain"),
	oldMsWaterCurtain: text("OldMS_WaterCurtain"),
	msEnclosure: text("MS_Enclosure"),
	oldMsEnclosure: text("OldMS_Enclosure"),
	msNeutralization: text("MS_Neutralization"),
	oldMsNeutralization: text("OldMS_Neutralization"),
	msNone: text("MS_None"),
	oldMsNone: text("OldMS_None"),
	msOtherType: text("MS_OtherType"),
	oldMsOtherType: text("OldMS_OtherType"),
	mdProcessAreaDetectors: text("MD_ProcessAreaDetectors"),
	oldMdProcessAreaDetectors: text("OldMD_ProcessAreaDetectors"),
	mdPerimeterMonitors: text("MD_PerimeterMonitors"),
	oldMdPerimeterMonitors: text("OldMD_PerimeterMonitors"),
	mdNone: text("MD_None"),
	oldMdNone: text("OldMD_None"),
	mdOtherType: text("MD_OtherType"),
	oldMdOtherType: text("OldMD_OtherType"),
	chChemicalReduction: text("CH_ChemicalReduction"),
	oldChChemicalReduction: text("OldCH_ChemicalReduction"),
	chChemicalIncrease: text("CH_ChemicalIncrease"),
	oldChChemicalIncrease: text("OldCH_ChemicalIncrease"),
	chChangeProcessParameters: text("CH_ChangeProcessParameters"),
	oldChChangeProcessParameters: text("OldCH_ChangeProcessParameters"),
	chInstallProcessControls: text("CH_InstallProcessControls"),
	oldChInstallProcessControls: text("OldCH_InstallProcessControls"),
	chInstallProcessDetection: text("CH_InstallProcessDetection"),
	oldChInstallProcessDetection: text("OldCH_InstallProcessDetection"),
	chInstallPerimeterMonitoring: text("CH_InstallPerimeterMonitoring"),
	oldChInstallPerimeterMonitoring: text("OldCH_InstallPerimeterMonitoring"),
	chInstallMitigationSystems: text("CH_InstallMitigationSystems"),
	oldChInstallMitigationSystems: text("OldCH_InstallMitigationSystems"),
	chNoneRequired: text("CH_NoneRequired"),
	oldChNoneRequired: text("OldCH_NoneRequired"),
	chNone: text("CH_None"),
	oldChNone: text("OldCH_None"),
	chOtherChanges: text("CH_OtherChanges"),
	oldChOtherChanges: text("OldCH_OtherChanges"),
	opProceduresReviewDate: text("OpProceduresReviewDate"),
	oldOpProceduresReviewDate: text("OldOpProceduresReviewDate"),
	trainingReviewDate: text("TrainingReviewDate"),
	oldTrainingReviewDate: text("OldTrainingReviewDate"),
	trClassroom: text("TR_Classroom"),
	oldTrClassroom: text("OldTR_Classroom"),
	trOnTheJob: text("TR_OnTheJob"),
	oldTrOnTheJob: text("OldTR_OnTheJob"),
	trOtherType: text("TR_OtherType"),
	oldTrOtherType: text("OldTR_OtherType"),
	ctWrittenTest: text("CT_WrittenTest"),
	oldCtWrittenTest: text("OldCT_WrittenTest"),
	ctOralTest: text("CT_OralTest"),
	oldCtOralTest: text("OldCT_OralTest"),
	ctDemonstration: text("CT_Demonstration"),
	oldCtDemonstration: text("OldCT_Demonstration"),
	ctObservation: text("CT_Observation"),
	oldCtObservation: text("OldCT_Observation"),
	ctOtherType: text("CT_OtherType"),
	oldCtOtherType: text("OldCT_OtherType"),
	maintenanceReviewDate: text("MaintenanceReviewDate"),
	oldMaintenanceReviewDate: text("OldMaintenanceReviewDate"),
	equipmentInspectionDate: text("EquipmentInspectionDate"),
	oldEquipmentInspectionDate: text("OldEquipmentInspectionDate"),
	equipmentTested: text("EquipmentTested"),
	oldEquipmentTested: text("OldEquipmentTested"),
	complianceAuditDate: text("ComplianceAuditDate"),
	oldComplianceAuditDate: text("OldComplianceAuditDate"),
	auditCompletionDate: text("AuditCompletionDate"),
	oldAuditCompletionDate: text("OldAuditCompletionDate"),
	incidentInvestigationDate: text("IncidentInvestigationDate"),
	oldIncidentInvestigationDate: text("OldIncidentInvestigationDate"),
	investigationChangeDate: text("InvestigationChangeDate"),
	oldInvestigationChangeDate: text("OldInvestigationChangeDate"),
	mostRecentChangeDate: text("MostRecentChangeDate"),
	oldMostRecentChangeDate: text("OldMostRecentChangeDate"),
});

export const tbls8PreventionProgramChemicals = pgTable("tbls8_prevention_program_chemicals", {
	primaryKey: integer("PrimaryKey"),
	preventionProgram2Id: integer("PreventionProgram2ID"),
	processChemicalId: integer("ProcessChemicalID"),
});

export const tbls8PreventionProgramChemicalsChangehistory = pgTable("tbls8_prevention_program_chemicals_changehistory", {
	pp2ChemChangeHistoryId: integer("PP2ChemChangeHistoryID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: varchar("CDXCorrectionCode", { length: 255 }),
	pp2ChemId: integer("PP2ChemID"),
	preventionProgram2Id: integer("PreventionProgram2ID"),
	processChemicalId: integer("ProcessChemicalID"),
	processNaicsId: integer("Process_NAICS_ID"),
	naicsCode: varchar("NAICSCode", { length: 255 }),
});

export const tbls9Emergencyresponses = pgTable("tbls9emergencyresponses", {
	facilityId: integer("FacilityID"),
	erCommunityPlan: text("ER_CommunityPlan"),
	erFacilityPlan: text("ER_FacilityPlan"),
	erResponseActions: text("ER_ResponseActions"),
	erPublicInfoProcedures: text("ER_PublicInfoProcedures"),
	erEmergencyHealthCare: text("ER_EmergencyHealthCare"),
	erReviewDate: text("ER_ReviewDate"),
	erTrainingDate: text("ERTrainingDate"),
	coordinatingAgencyName: text("CoordinatingAgencyName"),
	coordinatingAgencyPhone: text("CoordinatingAgencyPhone"),
	frOsha191038: text("FR_OSHA1910_38"),
	frOsha1910120: text("FR_OSHA1910_120"),
	frSpcc: text("FR_SPCC"),
	frRcra: text("FR_RCRA"),
	frOpa90: text("FR_OPA90"),
	frEpcra: text("FR_EPCRA"),
	frOtherRegulation: text("FR_OtherRegulation"),
	exercisePlan: text("ExercisePlan"),
	exercisePlanDate: text("ExercisePlanDate"),
	notificationDrill: text("NotificationDrill"),
	notificationDrillDate: text("NotificationDrillDate"),
	tabletopExercise: text("TabletopExercise"),
	tabletopExerciseDate: text("TabletopExerciseDate"),
	lepcCoordination: text("LEPCCoordination"),
	lepcCoordinationDate: text("LEPCCoordinationDate"),
	lepcCoordinationReason: text("LEPCCoordinationReason"),
	localResponseAgencyCoordination: text("LocalResponseAgencyCoordination"),
	localResponseAgencyCoordinationDate: text("LocalResponseAgencyCoordinationDate"),
	localResponseAgencyCoordinationReason: text("LocalResponseAgencyCoordinationReason"),
	stationarySource: text("StationarySource"),
});

export const tbls9EmergencyresponsesChangehistory = pgTable("tbls9emergencyresponses_changehistory", {
	erPlanChangeId: integer("ERPlanChangeID"),
	facilityChangeHistoryId: integer("FacilityChangeHistoryID"),
	cdxCorrectionCode: text("CDXCorrectionCode"),
	facilityId: integer("FacilityID"),
	erCommunityPlan: text("ER_CommunityPlan"),
	oldErCommunityPlan: text("OldER_CommunityPlan"),
	erFacilityPlan: text("ER_FacilityPlan"),
	oldErFacilityPlan: text("OldER_FacilityPlan"),
	erResponseActions: text("ER_ResponseActions"),
	oldErResponseActions: text("OldER_ResponseActions"),
	erPublicInfoProcedures: text("ER_PublicInfoProcedures"),
	oldErPublicInfoProcedures: text("OldER_PublicInfoProcedures"),
	erEmergencyHealthCare: text("ER_EmergencyHealthCare"),
	oldErEmergencyHealthCare: text("OldER_EmergencyHealthCare"),
	erReviewDate: text("ER_ReviewDate"),
	oldErReviewDate: text("OldER_ReviewDate"),
	erTrainingDate: text("ERTrainingDate"),
	oldErTrainingDate: text("OldERTrainingDate"),
	coordinatingAgencyName: text("CoordinatingAgencyName"),
	oldCoordinatingAgencyName: text("OldCoordinatingAgencyName"),
	coordinatingAgencyPhone: text("CoordinatingAgencyPhone"),
	oldCoordinatingAgencyPhone: text("OldCoordinatingAgencyPhone"),
	frOsha191038: text("FR_OSHA1910_38"),
	oldFrOsha191038: text("OldFR_OSHA1910_38"),
	frOsha1910120: text("FR_OSHA1910_120"),
	oldFrOsha1910120: text("OldFR_OSHA1910_120"),
	frSpcc: text("FR_SPCC"),
	oldFrSpcc: text("OldFR_SPCC"),
	frRcra: text("FR_RCRA"),
	oldFrRcra: text("OldFR_RCRA"),
	frOpa90: text("FR_OPA90"),
	oldFrOpa90: text("OldFR_OPA90"),
	frEpcra: text("FR_EPCRA"),
	oldFrEpcra: text("OldFR_EPCRA"),
	frOtherRegulation: text("FR_OtherRegulation"),
	oldFrOtherRegulation: text("OldFR_OtherRegulation"),
	exercisePlan: text("ExercisePlan"),
	oldExercisePlan: text("OldExercisePlan"),
	exercisePlanDate: text("ExercisePlanDate"),
	oldExercisePlanDate: text("OldExercisePlanDate"),
	notificationDrill: text("NotificationDrill"),
	oldNotificationDrill: text("OldNotificationDrill"),
	notificationDrillDate: text("NotificationDrillDate"),
	oldNotificationDrillDate: text("OldNotificationDrillDate"),
	tabletopExercise: text("TabletopExercise"),
	oldTabletopExercise: text("OldTabletopExercise"),
	tabletopExerciseDate: text("TabletopExerciseDate"),
	oldTabletopExerciseDate: text("OldTabletopExerciseDate"),
	lepcCoordination: text("LEPCCoordination"),
	oldLepcCoordination: text("OldLEPCCoordination"),
	lepcCoordinationDate: text("LEPCCoordinationDate"),
	oldLepcCoordinationDate: text("OldLEPCCoordinationDate"),
	lepcCoordinationReason: text("LEPCCoordinationReason"),
	oldLepcCoordinationReason: text("OldLEPCCoordinationReason"),
	localResponseAgencyCoordination: text("LocalResponseAgencyCoordination"),
	oldLocalResponseAgencyCoordination: text("OldLocalResponseAgencyCoordination"),
	localResponseAgencyCoordinationDate: text("LocalResponseAgencyCoordinationDate"),
	oldLocalResponseAgencyCoordinationDate: text("OldLocalResponseAgencyCoordinationDate"),
	localResponseAgencyCoordinationReason: text("LocalResponseAgencyCoordinationReason"),
	oldLocalResponseAgencyCoordinationReason: text("OldLocalResponseAgencyCoordinationReason"),
	stationarySource: text("StationarySource"),
	oldStationarySource: text("OldStationarySource"),
});

export const tlkpadminrefreshinfo = pgTable("tlkpadminrefreshinfo", {
	id: integer("ID"),
	dateRefreshed: timestamp("DateRefreshed", { mode: 'string' }),
});

export const tlkpchemicals = pgTable("tlkpchemicals", {
	chemicalId: integer("ChemicalID"),
	chemicalName: text("ChemicalName"),
	casNumber: text("CASNumber"),
	threshold: real("Threshold"),
	chemType: text("ChemType"),
	flgCbi: text(),
	chemOwner: text("ChemOwner"),
});

export const tlkpcountyfipscodes = pgTable("tlkpcountyfipscodes", {
	stateCode: varchar("State_Code", { length: 255 }),
	countyCode: varchar("County_Code", { length: 255 }),
	countyName: varchar("County_Name", { length: 255 }),
	stateCountyCode: varchar("StateCounty_Code", { length: 255 }),
});

export const tlkpderegistrationreason = pgTable("tlkpderegistrationreason", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkpdochandle = pgTable("tlkpdochandle", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkpdoctype = pgTable("tlkpdoctype", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkpforeigncountry = pgTable("tlkpforeigncountry", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkplatlongdescriptions = pgTable("tlkplatlongdescriptions", {
	featCode: varchar("Feat_Code", { length: 255 }),
	featDesc: varchar("Feat_Desc", { length: 255 }),
});

export const tlkplatlongmethods = pgTable("tlkplatlongmethods", {
	primaryKey: integer("Primary_Key"),
	methodCode: varchar("Method_Code", { length: 255 }),
	methodDesc: varchar("Method_Desc", { length: 255 }),
});

export const tlkpnaics = pgTable("tlkpnaics", {
	naicsCode: varchar("NAICS_CODE", { length: 255 }),
	naicsDescription: varchar("NAICS_DESCRIPTION", { length: 255 }),
});

export const tlkpphysicalstatecodes = pgTable("tlkpphysicalstatecodes", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkprejectreason = pgTable("tlkprejectreason", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkps2Scenariocodes = pgTable("tlkps2scenariocodes", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkps6Initiatingevents = pgTable("tlkps6initiatingevents", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkpstatefipscodes = pgTable("tlkpstatefipscodes", {
	stateCode: varchar("STATE_CODE", { length: 255 }),
	stateAbbr: varchar("STATE_ABBR", { length: 255 }),
	stateName: varchar("STATE_NAME", { length: 255 }),
	region: varchar("REGION", { length: 255 }),
});

export const tlkpsubmissionreasoncodes = pgTable("tlkpsubmissionreasoncodes", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkptopographycode = pgTable("tlkptopographycode", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});

export const tlkpwindspeedunitcodes = pgTable("tlkpwindspeedunitcodes", {
	lookupCode: varchar("LookupCode", { length: 255 }),
	description: varchar("Description", { length: 255 }),
});
